{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/board/board.component.ts","webpack:///src/app/board/board.component.html","webpack:///src/app/square/square.component.ts","webpack:///src/app/square/square.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","BoardComponent","newGame","squares","Array","fill","winner","xIsNext","idx","splice","player","calculate","lines","i","length","a","b","c","SquareComponent","value","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n","<app-board></app-board>\n<router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SquareComponent } from './square/square.component';\nimport { BoardComponent } from './board/board.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SquareComponent,\n    BoardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.scss']\n})\nexport class BoardComponent implements OnInit {\n  squares: string[];\n  xIsNext: boolean;\n  winner: string;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.newGame();\n  }\n  newGame() {\n    this.squares = Array(9).fill(null);\n    this.winner = null;\n    this.xIsNext = true;\n  }\n\n  get player() {\n    return this.xIsNext ? 'X' : 'O';\n  }\n\n  makeMove(idx: number) {\n    if (!this.squares[idx]) {\n      this.squares.splice(idx, 1, this.player);\n      this.xIsNext = !this.xIsNext;\n    }\n\n    this.winner = this.calculate();\n  }\n\n  calculate() {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (this.squares[a] && this.squares[a] === this.squares[b] && this.squares[a] === this.squares[c]\n      ) {\n        return this.squares[a];\n      }\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n","<h1 [hidden]=\"winner\" style=\"text-align: center; color: white\">Current Player: {{ player }} </h1>\n\n<h2 *ngIf=\"winner\" style=\"text-align: center; color: white\">\n  Player {{ winner }} won the game!\n</h2>\n<div class=\"button\">\n  <p (click)=\"newGame()\">Start new Game</p>\n</div>\n<main>\n  <app-square\n    *ngFor=\"let val of squares; let i = index\"\n    [value]=\"val\"\n    (click)=\"makeMove(i)\">\n  </app-square>\n</main>\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-square',\n  templateUrl: './square.component.html',\n  styleUrls: ['./square.component.css']\n})\nexport class SquareComponent implements OnInit {\n  @Input() value: 'X' | 'O';\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n","<button *ngIf=\"!value\">{{ value }}</button>\n<button style=\"color: #9B59B6\" *ngIf=\"value == 'X'\">{{ value }}</button>\n<button style=\"color: #EB984E;\" *ngIf=\"value == 'O'\">{{ value }}</button>\n<!--#48C9B0-->\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}